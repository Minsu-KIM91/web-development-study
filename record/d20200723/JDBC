	[JDBC]
1. Java DataBase Connectivity
: 자바 Language에서 dbms에 접근할 수 있도록 하는 프로그래밍 API
JDBC는 DBMS언어인 SQL을 이용하여 data를 주고받을 수 있다.


2. 역할 3가지.
- DataBase연결
- SQL 문을 전송
- 결과 처리

3. JDBC API
JAVA Language로 다양한 종류의 관계형 DataBase를 연결하고 검색할 수 있도록 해주는 
Java 표준 SQL Interface
java.sql.package에 존재
위 패키지에서 제공하는 클래스 사용법만 알면 이를 지원하는 모든 DataBase에서 동일하게 프로그래밍이 가능

4. 자주 사용되는 기본 API
-java.sql.Connection interface
	:Database와의 연결을 가능하게 해주며 질의문을 실행하고 결과를 리턴받을 수 있는 통로
	
-javs.sql.statement interface
	: SQL문을 DBMS에 보내는데 사용.
	StateMent			- 정적쿼리 처리에 유리한 경우.
	PreparedStatement	- 동적쿼리 처리에 유리. 질의문을 미리 컴파일해놓고 값을 지정하는 방식.
						재사용에 유리. 미리 컴파일 되어있어서 중간에 값 끼는게 어려움(보안유리-sql인젝션)
	CallableStatement	- 데이터베이스 안에 stored procedure를 호출할 수 있는 statement
	(*Statement : 데이터베이스로 쿼리를 담아 보내는 그릇
	
- java.sql.ResultSet interface
	:질의문 요청에 따른 결과를 담는 테이블. ResultSet에 저장된 결과에 access할 수 있는 다양한 메소드가 존재.

5. JDBC 드라이버 필요함...(없을 경우 , 회사에서 제공하는 걸 찾아야한다.)	
	-> C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib
	실습컴터에는 깔 때 다 깔림. 다른 버전이라도 server\jdbc\lib 여긴 같음.
	윈도우 서비스 검색해서 자동/수동으로 전환 오라클관련
	맨 첫 프로젝트에서 우클릭으로 빌드패스에서 컨피겨빌드패스 클릭.
	처음엔 오더 엔 엑스포트 나오는데 이 카테고리 옆에 라이브러리가 있다. 
	여기에서 add external...를 통해 jdbc 드라이버를 추가해 적용시킨다.
	-> 드라이버는 다운받아졌지만 내 프로젝트에서는 추가를 안했기 때문에 해줘야 하는 것.

	위 작업은 외부 클래스를 가져와 넣을 때도 사용하는 방법이다.
	
	
	
	
	
	
	
	
	
		